{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Game": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"slug": {
						"type": "string"
					},
					"description_raw": {
						"type": "string"
					},
					"metacritic": {
						"type": "number",
						"format": "double"
					},
					"background_image": {
						"type": "string"
					},
					"rating": {
						"type": "number",
						"format": "double"
					},
					"released": {
						"type": "string"
					},
					"added": {
						"type": "number",
						"format": "double"
					},
					"rating_top": {
						"type": "number",
						"format": "double"
					},
					"website": {
						"type": "string"
					},
					"genres": {
						"items": {
							"$ref": "#/components/schemas/Genre"
						},
						"type": "array"
					},
					"parent_platforms": {
						"items": {
							"$ref": "#/components/schemas/ParentPlatform"
						},
						"type": "array"
					},
					"stores": {
						"items": {
							"$ref": "#/components/schemas/Store"
						},
						"type": "array"
					},
					"publishers": {
						"items": {
							"$ref": "#/components/schemas/Publisher"
						},
						"type": "array"
					},
					"developers": {
						"items": {
							"$ref": "#/components/schemas/Developer"
						},
						"type": "array"
					},
					"tags": {
						"items": {
							"$ref": "#/components/schemas/Tag"
						},
						"type": "array"
					},
					"wishlistedBy": {
						"items": {
							"$ref": "#/components/schemas/User"
						},
						"type": "array"
					},
					"inLibraryOf": {
						"items": {
							"$ref": "#/components/schemas/User"
						},
						"type": "array"
					},
					"trailers": {
						"items": {
							"$ref": "#/components/schemas/Trailer"
						},
						"type": "array"
					},
					"screenshots": {
						"items": {
							"$ref": "#/components/schemas/Screenshot"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"name",
					"slug",
					"genres",
					"parent_platforms",
					"stores",
					"publishers",
					"developers",
					"tags",
					"wishlistedBy",
					"inLibraryOf",
					"trailers",
					"screenshots"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Genre": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"slug": {
						"type": "string"
					},
					"image_background": {
						"type": "string",
						"nullable": true
					},
					"games": {
						"items": {
							"$ref": "#/components/schemas/Game"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"name",
					"slug",
					"games"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ParentPlatform": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"slug": {
						"type": "string"
					},
					"games": {
						"items": {
							"$ref": "#/components/schemas/Game"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"name",
					"slug",
					"games"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Store": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"slug": {
						"type": "string"
					},
					"image_background": {
						"type": "string",
						"nullable": true
					},
					"games": {
						"items": {
							"$ref": "#/components/schemas/Game"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"name",
					"slug",
					"games"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Publisher": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"slug": {
						"type": "string"
					},
					"image_background": {
						"type": "string",
						"nullable": true
					},
					"games": {
						"items": {
							"$ref": "#/components/schemas/Game"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"name",
					"slug",
					"games"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Developer": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"slug": {
						"type": "string"
					},
					"image_background": {
						"type": "string",
						"nullable": true
					},
					"games": {
						"items": {
							"$ref": "#/components/schemas/Game"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"name",
					"slug",
					"games"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Tag": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"slug": {
						"type": "string"
					},
					"language": {
						"type": "string"
					},
					"image_background": {
						"type": "string",
						"nullable": true
					},
					"games": {
						"items": {
							"$ref": "#/components/schemas/Game"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"name",
					"slug",
					"language",
					"games"
				],
				"type": "object",
				"additionalProperties": false
			},
			"User": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"username": {
						"type": "string"
					},
					"passwordHash": {
						"type": "string"
					},
					"role": {
						"type": "string",
						"enum": [
							"admin",
							"user"
						]
					},
					"wishlist": {
						"items": {
							"$ref": "#/components/schemas/Game"
						},
						"type": "array"
					},
					"library": {
						"items": {
							"$ref": "#/components/schemas/Game"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"username",
					"passwordHash",
					"role",
					"wishlist",
					"library"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Trailer": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"preview": {
						"type": "string"
					},
					"data480": {
						"type": "string"
					},
					"dataMax": {
						"type": "string"
					},
					"game": {
						"$ref": "#/components/schemas/Game"
					}
				},
				"required": [
					"id",
					"name",
					"preview",
					"data480",
					"dataMax",
					"game"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Screenshot": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"image": {
						"type": "string"
					},
					"width": {
						"type": "number",
						"format": "double"
					},
					"height": {
						"type": "number",
						"format": "double"
					},
					"is_deleted": {
						"type": "boolean"
					},
					"game": {
						"$ref": "#/components/schemas/Game"
					}
				},
				"required": [
					"id",
					"image",
					"width",
					"height",
					"is_deleted",
					"game"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ListResponse_Tag_": {
				"description": "Standard response for list endpoints.",
				"properties": {
					"count": {
						"type": "number",
						"format": "double"
					},
					"results": {
						"items": {
							"$ref": "#/components/schemas/Tag"
						},
						"type": "array"
					}
				},
				"required": [
					"count",
					"results"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_Tag_": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"slug": {
						"type": "string"
					},
					"language": {
						"type": "string"
					},
					"image_background": {
						"type": "string"
					},
					"games": {
						"items": {
							"$ref": "#/components/schemas/Game"
						},
						"type": "array"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"EntityUpdateDto": {
				"description": "DTO for updating entities with common fields.",
				"properties": {
					"name": {
						"type": "string"
					},
					"slug": {
						"type": "string"
					},
					"image_background": {
						"type": "string",
						"nullable": true
					},
					"language": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"name",
					"slug"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ListResponse_Store_": {
				"description": "Standard response for list endpoints.",
				"properties": {
					"count": {
						"type": "number",
						"format": "double"
					},
					"results": {
						"items": {
							"$ref": "#/components/schemas/Store"
						},
						"type": "array"
					}
				},
				"required": [
					"count",
					"results"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_Store_": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"slug": {
						"type": "string"
					},
					"image_background": {
						"type": "string"
					},
					"games": {
						"items": {
							"$ref": "#/components/schemas/Game"
						},
						"type": "array"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"ListResponse_Publisher_": {
				"description": "Standard response for list endpoints.",
				"properties": {
					"count": {
						"type": "number",
						"format": "double"
					},
					"results": {
						"items": {
							"$ref": "#/components/schemas/Publisher"
						},
						"type": "array"
					}
				},
				"required": [
					"count",
					"results"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_Publisher_": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"slug": {
						"type": "string"
					},
					"image_background": {
						"type": "string"
					},
					"games": {
						"items": {
							"$ref": "#/components/schemas/Game"
						},
						"type": "array"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"ListResponse_ParentPlatform_": {
				"description": "Standard response for list endpoints.",
				"properties": {
					"count": {
						"type": "number",
						"format": "double"
					},
					"results": {
						"items": {
							"$ref": "#/components/schemas/ParentPlatform"
						},
						"type": "array"
					}
				},
				"required": [
					"count",
					"results"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_ParentPlatform_": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"slug": {
						"type": "string"
					},
					"games": {
						"items": {
							"$ref": "#/components/schemas/Game"
						},
						"type": "array"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"ListResponse_Genre_": {
				"description": "Standard response for list endpoints.",
				"properties": {
					"count": {
						"type": "number",
						"format": "double"
					},
					"results": {
						"items": {
							"$ref": "#/components/schemas/Genre"
						},
						"type": "array"
					}
				},
				"required": [
					"count",
					"results"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_Genre_": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"slug": {
						"type": "string"
					},
					"image_background": {
						"type": "string"
					},
					"games": {
						"items": {
							"$ref": "#/components/schemas/Game"
						},
						"type": "array"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"EntityWithIdDto": {
				"description": "DTO for entities with an id, name, slug, and optional image_background.",
				"properties": {
					"name": {
						"type": "string"
					},
					"slug": {
						"type": "string"
					},
					"image_background": {
						"type": "string",
						"nullable": true
					},
					"language": {
						"type": "string",
						"nullable": true
					},
					"id": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"name",
					"slug",
					"id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GameUpdateDto": {
				"properties": {
					"tags": {
						"items": {
							"$ref": "#/components/schemas/EntityWithIdDto"
						},
						"type": "array"
					},
					"developers": {
						"items": {
							"$ref": "#/components/schemas/EntityWithIdDto"
						},
						"type": "array"
					},
					"publishers": {
						"items": {
							"$ref": "#/components/schemas/EntityWithIdDto"
						},
						"type": "array"
					},
					"stores": {
						"items": {
							"$ref": "#/components/schemas/EntityWithIdDto"
						},
						"type": "array"
					},
					"parent_platforms": {
						"items": {
							"$ref": "#/components/schemas/EntityWithIdDto"
						},
						"type": "array"
					},
					"genres": {
						"items": {
							"$ref": "#/components/schemas/EntityWithIdDto"
						},
						"type": "array"
					},
					"website": {
						"type": "string"
					},
					"rating_top": {
						"type": "number",
						"format": "double"
					},
					"added": {
						"type": "number",
						"format": "double"
					},
					"released": {
						"type": "string"
					},
					"rating": {
						"type": "number",
						"format": "double"
					},
					"background_image": {
						"type": "string"
					},
					"metacritic": {
						"type": "number",
						"format": "double"
					},
					"description_raw": {
						"type": "string"
					},
					"slug": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"slug",
					"name"
				],
				"type": "object",
				"description": "DTO for updating Game entities.\r\n'name' and 'slug' are required, all other fields are optional."
			},
			"ListResponse_Developer_": {
				"description": "Standard response for list endpoints.",
				"properties": {
					"count": {
						"type": "number",
						"format": "double"
					},
					"results": {
						"items": {
							"$ref": "#/components/schemas/Developer"
						},
						"type": "array"
					}
				},
				"required": [
					"count",
					"results"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_Developer_": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"slug": {
						"type": "string"
					},
					"image_background": {
						"type": "string"
					},
					"games": {
						"items": {
							"$ref": "#/components/schemas/Game"
						},
						"type": "array"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"RegisterRequest": {
				"properties": {
					"username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"username",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LoginRequest": {
				"properties": {
					"username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"username",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "rawg-server",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"paths": {
		"/wishlist/{userId}": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "List of games in the user's wishlist.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"description": "Get all games in a user's wishlist.",
				"tags": [
					"Wishlist"
				],
				"security": [],
				"parameters": [
					{
						"description": "User ID.",
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/wishlist/{userId}/{gameId}": {
			"post": {
				"operationId": "Add",
				"responses": {
					"200": {
						"description": "Result of the add operation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"description": "Add a game to a user's wishlist.",
				"tags": [
					"Wishlist"
				],
				"security": [],
				"parameters": [
					{
						"description": "User ID.",
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Game ID.",
						"in": "path",
						"name": "gameId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"delete": {
				"operationId": "Remove",
				"responses": {
					"200": {
						"description": "Result of the remove operation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"description": "Remove a game from a user's wishlist.",
				"tags": [
					"Wishlist"
				],
				"security": [],
				"parameters": [
					{
						"description": "User ID.",
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Game ID.",
						"in": "path",
						"name": "gameId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/tags": {
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": "ListResponse containing tags.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ListResponse_Tag_"
								}
							}
						}
					}
				},
				"description": "Get a list of all tags.",
				"tags": [
					"Tags"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "Create",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Tag"
								}
							}
						}
					}
				},
				"description": "Create a new tag.\r\nRequires admin access.",
				"tags": [
					"Tags"
				],
				"security": [
					{
						"admin": []
					}
				],
				"parameters": [],
				"requestBody": {
					"description": "Partial tag data.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_Tag_",
								"description": "Partial tag data."
							}
						}
					}
				}
			}
		},
		"/tags/{id}": {
			"get": {
				"operationId": "GetById",
				"responses": {
					"200": {
						"description": "Tag entity or null if not found.",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Tag"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"description": "Get a tag by ID.",
				"tags": [
					"Tags"
				],
				"security": [],
				"parameters": [
					{
						"description": "Tag ID.",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"put": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Updated Tag entity or null if not found.",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Tag"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"description": "Update an existing tag.\r\nRequires admin access.",
				"tags": [
					"Tags"
				],
				"security": [
					{
						"admin": []
					}
				],
				"parameters": [
					{
						"description": "Tag ID.",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"description": "Update data.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/EntityUpdateDto",
								"description": "Update data."
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Delete",
				"responses": {
					"200": {
						"description": "Message indicating result.",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Delete a tag by ID.\r\nRequires admin access.",
				"tags": [
					"Tags"
				],
				"security": [
					{
						"admin": []
					}
				],
				"parameters": [
					{
						"description": "Tag ID.",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/stores": {
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": "ListResponse containing stores.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ListResponse_Store_"
								}
							}
						}
					}
				},
				"description": "Get a list of all stores.",
				"tags": [
					"Stores"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "Create",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Store"
								}
							}
						}
					}
				},
				"description": "Create a new store.\r\nRequires admin access.",
				"tags": [
					"Stores"
				],
				"security": [
					{
						"admin": []
					}
				],
				"parameters": [],
				"requestBody": {
					"description": "Partial store data.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_Store_",
								"description": "Partial store data."
							}
						}
					}
				}
			}
		},
		"/stores/{id}": {
			"get": {
				"operationId": "GetById",
				"responses": {
					"200": {
						"description": "Store entity or null if not found.",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Store"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"description": "Get a store by ID.",
				"tags": [
					"Stores"
				],
				"security": [],
				"parameters": [
					{
						"description": "Store ID.",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"put": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Updated Store entity or null if not found.",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Store"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"description": "Update an existing store.\r\nRequires admin access.",
				"tags": [
					"Stores"
				],
				"security": [
					{
						"admin": []
					}
				],
				"parameters": [
					{
						"description": "Store ID.",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"description": "Update data.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/EntityUpdateDto",
								"description": "Update data."
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Delete",
				"responses": {
					"200": {
						"description": "Message indicating result.",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Delete a store by ID.\r\nRequires admin access.",
				"tags": [
					"Stores"
				],
				"security": [
					{
						"admin": []
					}
				],
				"parameters": [
					{
						"description": "Store ID.",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/publishers": {
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": "ListResponse containing publishers.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ListResponse_Publisher_"
								}
							}
						}
					}
				},
				"description": "Get a list of all publishers.",
				"tags": [
					"Publishers"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "Create",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Publisher"
								}
							}
						}
					}
				},
				"description": "Create a new publisher.\r\nRequires admin access.",
				"tags": [
					"Publishers"
				],
				"security": [
					{
						"admin": []
					}
				],
				"parameters": [],
				"requestBody": {
					"description": "Partial publisher data.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_Publisher_",
								"description": "Partial publisher data."
							}
						}
					}
				}
			}
		},
		"/publishers/{id}": {
			"get": {
				"operationId": "GetById",
				"responses": {
					"200": {
						"description": "Publisher entity or null if not found.",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Publisher"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"description": "Get a publisher by ID.",
				"tags": [
					"Publishers"
				],
				"security": [],
				"parameters": [
					{
						"description": "Publisher ID.",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"put": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Updated Publisher entity or null if not found.",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Publisher"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"description": "Update an existing publisher.\r\nRequires admin access.",
				"tags": [
					"Publishers"
				],
				"security": [
					{
						"admin": []
					}
				],
				"parameters": [
					{
						"description": "Publisher ID.",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"description": "Update data.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/EntityUpdateDto",
								"description": "Update data."
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Delete",
				"responses": {
					"200": {
						"description": "Message indicating result.",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Delete a publisher by ID.\r\nRequires admin access.",
				"tags": [
					"Publishers"
				],
				"security": [
					{
						"admin": []
					}
				],
				"parameters": [
					{
						"description": "Publisher ID.",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/platforms/lists/parents": {
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": "ListResponse containing parent platforms.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ListResponse_ParentPlatform_"
								}
							}
						}
					}
				},
				"description": "Get a list of all parent platforms.",
				"tags": [
					"ParentPlatforms"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "Create",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ParentPlatform"
								}
							}
						}
					}
				},
				"description": "Create a new parent platform.\r\nRequires admin access.",
				"tags": [
					"ParentPlatforms"
				],
				"security": [
					{
						"admin": []
					}
				],
				"parameters": [],
				"requestBody": {
					"description": "Partial parent platform data.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_ParentPlatform_",
								"description": "Partial parent platform data."
							}
						}
					}
				}
			}
		},
		"/platforms/lists/parents/{id}": {
			"get": {
				"operationId": "GetById",
				"responses": {
					"200": {
						"description": "ParentPlatform entity or null if not found.",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ParentPlatform"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"description": "Get a parent platform by ID.",
				"tags": [
					"ParentPlatforms"
				],
				"security": [],
				"parameters": [
					{
						"description": "ParentPlatform ID.",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"put": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Updated ParentPlatform entity or null if not found.",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ParentPlatform"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"description": "Update an existing parent platform.\r\nRequires admin access.",
				"tags": [
					"ParentPlatforms"
				],
				"security": [
					{
						"admin": []
					}
				],
				"parameters": [
					{
						"description": "ParentPlatform ID.",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"description": "Update data.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/EntityUpdateDto",
								"description": "Update data."
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Delete",
				"responses": {
					"200": {
						"description": "Message indicating result.",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Delete a parent platform by ID.\r\nRequires admin access.",
				"tags": [
					"ParentPlatforms"
				],
				"security": [
					{
						"admin": []
					}
				],
				"parameters": [
					{
						"description": "ParentPlatform ID.",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/library/{userId}": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "List of games in the user's library.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"description": "Get all games in a user's library.",
				"tags": [
					"Library"
				],
				"security": [],
				"parameters": [
					{
						"description": "User ID.",
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/library/{userId}/{gameId}": {
			"post": {
				"operationId": "Add",
				"responses": {
					"200": {
						"description": "Result of the add operation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"description": "Add a game to a user's library.",
				"tags": [
					"Library"
				],
				"security": [],
				"parameters": [
					{
						"description": "User ID.",
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Game ID.",
						"in": "path",
						"name": "gameId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"delete": {
				"operationId": "Remove",
				"responses": {
					"200": {
						"description": "Result of the remove operation.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"description": "Remove a game from a user's library.",
				"tags": [
					"Library"
				],
				"security": [],
				"parameters": [
					{
						"description": "User ID.",
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Game ID.",
						"in": "path",
						"name": "gameId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/hello": {
			"get": {
				"operationId": "SayHello",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/genres": {
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ListResponse_Genre_"
								}
							}
						}
					}
				},
				"description": "Get a list of all genres.",
				"tags": [
					"Genres"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "Create",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Genre"
								}
							}
						}
					}
				},
				"description": "Create a new genre.\r\nRequires admin access.",
				"tags": [
					"Genres"
				],
				"security": [
					{
						"admin": []
					}
				],
				"parameters": [],
				"requestBody": {
					"description": "Partial genre data.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_Genre_",
								"description": "Partial genre data."
							}
						}
					}
				}
			}
		},
		"/genres/{id}": {
			"get": {
				"operationId": "GetById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Genre"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"description": "Get a genre by ID.",
				"tags": [
					"Genres"
				],
				"security": [],
				"parameters": [
					{
						"description": "Genre ID.",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"put": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Genre"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"description": "Update an existing genre.\r\nRequires admin access.",
				"tags": [
					"Genres"
				],
				"security": [
					{
						"admin": []
					}
				],
				"parameters": [
					{
						"description": "Genre ID.",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"description": "Update data.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/EntityUpdateDto",
								"description": "Update data."
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Delete",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Delete a genre by ID.\r\nRequires admin access.",
				"tags": [
					"Genres"
				],
				"security": [
					{
						"admin": []
					}
				],
				"parameters": [
					{
						"description": "Genre ID.",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/games": {
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"results": {
											"items": {
												"properties": {
													"screenshots": {
														"items": {
															"$ref": "#/components/schemas/Screenshot"
														},
														"type": "array"
													},
													"trailers": {
														"items": {
															"$ref": "#/components/schemas/Trailer"
														},
														"type": "array"
													},
													"tags": {
														"items": {
															"$ref": "#/components/schemas/Tag"
														},
														"type": "array"
													},
													"developers": {
														"items": {
															"$ref": "#/components/schemas/Developer"
														},
														"type": "array"
													},
													"publishers": {
														"items": {
															"$ref": "#/components/schemas/Publisher"
														},
														"type": "array"
													},
													"stores": {
														"items": {
															"$ref": "#/components/schemas/Store"
														},
														"type": "array"
													},
													"parent_platforms": {
														"items": {
															"$ref": "#/components/schemas/ParentPlatform"
														},
														"type": "array"
													},
													"genres": {
														"items": {
															"$ref": "#/components/schemas/Genre"
														},
														"type": "array"
													},
													"website": {
														"type": "string"
													},
													"rating_top": {
														"type": "number",
														"format": "double"
													},
													"added": {
														"type": "number",
														"format": "double"
													},
													"released": {
														"type": "string"
													},
													"rating": {
														"type": "number",
														"format": "double"
													},
													"background_image": {
														"type": "string"
													},
													"metacritic": {
														"type": "number",
														"format": "double"
													},
													"description_raw": {
														"type": "string"
													},
													"slug": {
														"type": "string"
													},
													"name": {
														"type": "string"
													},
													"id": {
														"type": "number",
														"format": "double"
													},
													"inLibraryOf": {
														"items": {
															"properties": {
																"username": {
																	"type": "string"
																},
																"id": {
																	"type": "number",
																	"format": "double"
																}
															},
															"required": [
																"username",
																"id"
															],
															"type": "object"
														},
														"type": "array"
													},
													"wishlistedBy": {
														"items": {
															"properties": {
																"username": {
																	"type": "string"
																},
																"id": {
																	"type": "number",
																	"format": "double"
																}
															},
															"required": [
																"username",
																"id"
															],
															"type": "object"
														},
														"type": "array"
													}
												},
												"required": [
													"screenshots",
													"trailers",
													"tags",
													"developers",
													"publishers",
													"stores",
													"parent_platforms",
													"genres",
													"slug",
													"name",
													"id",
													"inLibraryOf",
													"wishlistedBy"
												],
												"type": "object"
											},
											"type": "array"
										},
										"next": {
											"type": "string"
										},
										"count": {
											"type": "number",
											"format": "double"
										}
									},
									"required": [
										"results",
										"next",
										"count"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Get a list of all games, optionally filtered and paginated.",
				"tags": [
					"Games"
				],
				"security": [],
				"parameters": [
					{
						"description": "Page number for pagination.",
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Number of items per page.",
						"in": "query",
						"name": "page_size",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Filter by genre.",
						"in": "query",
						"name": "genreId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Filter by store.",
						"in": "query",
						"name": "storeId",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Filter by platform.",
						"in": "query",
						"name": "platformId",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Filter by publisher.",
						"in": "query",
						"name": "publisherId",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Filter by developer.",
						"in": "query",
						"name": "developerId",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Filter by wishlist user.",
						"in": "query",
						"name": "wishlistUserId",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Filter by library user.",
						"in": "query",
						"name": "libraryUserId",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Sort order.",
						"in": "query",
						"name": "sortOrder",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Search text.",
						"in": "query",
						"name": "searchText",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Filter by tag.",
						"in": "query",
						"name": "tagId",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"post": {
				"operationId": "Create",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Game"
								}
							}
						}
					}
				},
				"description": "Create a new game.\r\nRequires admin access.",
				"tags": [
					"Games"
				],
				"security": [
					{
						"admin": []
					}
				],
				"parameters": [],
				"requestBody": {
					"description": "Partial game data.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/GameUpdateDto",
								"description": "Partial game data."
							}
						}
					}
				}
			}
		},
		"/games/{id}": {
			"get": {
				"operationId": "GetById",
				"responses": {
					"200": {
						"description": "Game entity or null if not found.",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/Game"
										},
										{}
									]
								}
							}
						}
					}
				},
				"description": "Get a game by ID.",
				"tags": [
					"Games"
				],
				"security": [],
				"parameters": [
					{
						"description": "Game ID.",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"patch": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Updated Game entity.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Game"
								}
							}
						}
					}
				},
				"description": "Update an existing game.\r\nRequires admin access.",
				"tags": [
					"Games"
				],
				"security": [
					{
						"admin": []
					}
				],
				"parameters": [
					{
						"description": "Game ID.",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"description": "Update data.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/GameUpdateDto",
								"description": "Update data."
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Remove",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Delete a game by ID.\r\nRequires admin access.",
				"tags": [
					"Games"
				],
				"security": [
					{
						"admin": []
					}
				],
				"parameters": [
					{
						"description": "Game ID.",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/games/{id}/movies": {
			"get": {
				"operationId": "GetTrailers",
				"responses": {
					"200": {
						"description": "List of trailers.",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"results": {
											"items": {
												"$ref": "#/components/schemas/Trailer"
											},
											"type": "array"
										},
										"count": {
											"type": "number",
											"format": "double"
										}
									},
									"required": [
										"results",
										"count"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Get trailers (movies) for a game by ID.",
				"tags": [
					"Games"
				],
				"security": [],
				"parameters": [
					{
						"description": "Game ID.",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/games/{id}/screenshots": {
			"get": {
				"operationId": "GetScreenshots",
				"responses": {
					"200": {
						"description": "List of screenshots.",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"results": {
											"items": {
												"$ref": "#/components/schemas/Screenshot"
											},
											"type": "array"
										},
										"count": {
											"type": "number",
											"format": "double"
										}
									},
									"required": [
										"results",
										"count"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Get screenshots for a game by ID.",
				"tags": [
					"Games"
				],
				"security": [],
				"parameters": [
					{
						"description": "Game ID.",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/developers": {
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": "ListResponse containing developers.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ListResponse_Developer_"
								}
							}
						}
					}
				},
				"description": "Get a list of all developers.",
				"tags": [
					"Developers"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "Create",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Developer"
								}
							}
						}
					}
				},
				"description": "Create a new developer.\r\nRequires admin access.",
				"tags": [
					"Developers"
				],
				"security": [
					{
						"admin": []
					}
				],
				"parameters": [],
				"requestBody": {
					"description": "Partial developer data.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_Developer_",
								"description": "Partial developer data."
							}
						}
					}
				}
			}
		},
		"/developers/{id}": {
			"get": {
				"operationId": "GetById",
				"responses": {
					"200": {
						"description": "Developer entity or null if not found.",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Developer"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"description": "Get a developer by ID.",
				"tags": [
					"Developers"
				],
				"security": [],
				"parameters": [
					{
						"description": "Developer ID.",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"put": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Updated Developer entity or null if not found.",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Developer"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"description": "Update an existing developer.\r\nRequires admin access.",
				"tags": [
					"Developers"
				],
				"security": [
					{
						"admin": []
					}
				],
				"parameters": [
					{
						"description": "Developer ID.",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"description": "Update data.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/EntityUpdateDto",
								"description": "Update data."
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Delete",
				"responses": {
					"200": {
						"description": "Message indicating result.",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Delete a developer by ID.\r\nRequires admin access.",
				"tags": [
					"Developers"
				],
				"security": [
					{
						"admin": []
					}
				],
				"parameters": [
					{
						"description": "Developer ID.",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/auth/register": {
			"post": {
				"operationId": "Register",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"role": {
											"type": "string"
										},
										"username": {
											"type": "string"
										},
										"id": {
											"type": "number",
											"format": "double"
										}
									},
									"required": [
										"role",
										"username",
										"id"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Register a new user.",
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "Registration data (username and password).",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RegisterRequest",
								"description": "Registration data (username and password)."
							}
						}
					}
				}
			}
		},
		"/auth/login": {
			"post": {
				"operationId": "Login",
				"responses": {
					"200": {
						"description": "An object containing the authentication token.",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"token": {
											"type": "string"
										}
									},
									"required": [
										"token"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Authenticate a user and return a JWT token.",
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "Login data (username and password).",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LoginRequest",
								"description": "Login data (username and password)."
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}